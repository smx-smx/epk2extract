set(CMAKE_LEGACY_CYGWIN_WIN32 0)
project(epk2extract)
cmake_minimum_required(VERSION 2.8)

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake-modules/")
if(STATIC)
add_definitions(-static -static-libgcc)
SET(CMAKE_FIND_LIBRARY_SUFFIXES .a)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -static-libgcc")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc")
set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "${CMAKE_SHARED_LIBRARY_LINK_C_FLAGS} -static-libgcc")
set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "${CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS} -static-libgcc")
find_library(lc c STATIC IMPORTED REQUIRED)
find_library(lssl ssl STATIC IMPORTED REQUIRED)
find_library(lcrypto crypto STATIC IMPORTED REQUIRED)
find_library(lzo2 lzo2 STATIC IMPORTED REQUIRED)
find_library(lpthreads pthread STATIC IMPORTED REQUIRED)
find_library(lz z STATIC IMPORTED REQUIRED)
find_library(lm m STATIC IMPORTED REQUIRED)
else(STATIC)
find_package(OpenSSL REQUIRED)
find_package(LZO REQUIRED)
find_package(Threads REQUIRED)
find_package(ZLIB REQUIRED)
find_library(M_LIB m REQUIRED)
endif(STATIC)

include_directories(${LZO_INCLUDE_DIR})

add_subdirectory(src)
